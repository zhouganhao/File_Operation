#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <errno.h>
#include "libconfig.h"
#define LINE_SIZE 1024
char buf[LINE_SIZE];
int Read_Config_Value(char* path, char *key, char *value)
{
	int success = 0;
	//打开文件	
	FILE *file_fd = fopen(path,"r");
	if(file_fd ==NULL)
	{
		printf("open file error\n");
		return -1;
	}
	//读取文件 搜索关键字 
	while(1)
	{
		char *temp = fgets(buf,LINE_SIZE,file_fd);
		if(temp == NULL)
		{
			perror("fgets:");
		}

		if(feof(file_fd))
		{
			break;
		}

		//printf("%s %s",key,buf);
		char name[LINE_SIZE] = "hello";
		char name_value[LINE_SIZE] = {0};

		sscanf(buf,"%[^=]=%[^;]",name,name_value);

		int ret = sscanf(name,"%s",name);	// 过滤空格
		if(ret != 1)
		{
			continue;
		}
		ret = sscanf(name_value,"%s",name_value);	// 过滤空格
		if(ret != 1)
			continue;
		

		if(strcmp(key,name) == 0)
		{
			printf("%s ",buf);
			sscanf(name_value,"%s",value);
			success = 1;
		}
	}

	//获取对应值
	
	fclose(file_fd);

	return (success == 0)? -1 : 0;
}

int Write_Config_Value(char* path, char *key, char *value)
{
	int write_position = 0;

	//打开文件	
	FILE *file_fd = fopen(path,"r");
	FILE *copy_fd = fopen("./copy_config.ini","w+"); //新修改的配置文件
	if( (file_fd ==NULL) || (copy_fd == NULL) )
	{
		printf("open file error\n");
		return -1;
	}
	//读取文件 搜索关键字 
	while(1)
	{
		char *temp = fgets(buf,LINE_SIZE,file_fd);	//获取一行
		if(temp == NULL)
		{
			perror("fgets:");
		}

		if(feof(file_fd)) //文件结束：返回非0值，文件未结束，返回0值
		{
			break;
		}
		write_position = ftell(file_fd);
		//printf("%s %s",key,buf);
		char name[LINE_SIZE] = {0};
		char name_value[LINE_SIZE] = {0};

		sscanf(buf,"%[^=]=%s",name,name_value);
		sscanf(name,"%s",name);


		if(strcmp(key,name) == 0)
		{
			memset(buf,0,LINE_SIZE);
			rewind(file_fd);
			fseek(file_fd,write_position,SEEK_CUR);
			sprintf(buf,"%s = %s ;\n",key, value);
		}

		fputs(buf,copy_fd);
	}

	fclose(file_fd);
	fclose(copy_fd);

	char cmd[100]={0};
	sprintf(cmd,"mv %s %s","./copy_config.ini",path);
	system(cmd);
	return 0;
}
void config_ini(void)
{
	//printf("config.ini\n");
}

